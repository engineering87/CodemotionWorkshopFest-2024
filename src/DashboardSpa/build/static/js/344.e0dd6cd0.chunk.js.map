{"version":3,"file":"static/js/344.e0dd6cd0.chunk.js","mappings":"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","sources":["assets/extra/extra.ts","assets/styles/global.styles.tsx","services/Beneficiari/Beneficiari.service.tsx","services/PraticaOrdinaria/PraticaOrdinaria.service.tsx","services/PraticaStraordinaria/PraticaStraordinaria.service.tsx","views/Home/Home.tsx"],"sourcesContent":["/** @format */\r\n\r\nimport { notification } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport { useSelector } from 'react-redux';\r\nimport store from '../../redux/store';\r\n\r\nconst LF = process.env.REACT_APP_LF;\r\nconst LF_API = process.env.REACT_APP_LF_API;\r\nconst ND_SIGN = process.env.REACT_APP_ND_SIGN;\r\n\r\ndeclare global {\r\n  interface Window {\r\n    _Feedback: any;\r\n  }\r\n}\r\n\r\nexport function UUID() {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0;\r\n    // eslint-disable-next-line eqeqeq\r\n    var v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport function downloadFileByUrl(url: string, filename?: string, ext?: string) {\r\n  var element = document.createElement('a');\r\n  element.setAttribute('href', url);\r\n  if (filename) element.setAttribute('download', `${filename}${ext}`);\r\n  element.target = '_blank';\r\n\r\n  element.style.display = 'none';\r\n  document.body.appendChild(element);\r\n\r\n  element.click();\r\n\r\n  document.body.removeChild(element);\r\n}\r\n\r\nexport function get_preFix() {\r\n  let prefix;\r\n  try {\r\n    // @ts-ignore\r\n    prefix = GetPath();\r\n  } catch (error) {\r\n    prefix = '';\r\n  }\r\n  return prefix;\r\n}\r\n\r\nexport function get_sessionTokenFrom_MVC() {\r\n  let sessionToken;\r\n  try {\r\n    // @ts-ignore\r\n    sessionToken = _GetSessionToken_();\r\n  } catch (error) {\r\n    if (process.env.REACT_APP_ENVIRONMENT === 'DEV') sessionToken = 'SessionTokenTest';\r\n  }\r\n  return sessionToken;\r\n}\r\n\r\nexport function ObjToUrlEncoded(param: Object) {\r\n  return Object.entries(param)\r\n    .map(([k, v]) => `${k}=${v}`)\r\n    .join('&');\r\n}\r\n\r\ntype NotificationType = 'success' | 'info' | 'warning' | 'error';\r\ntype Config = {\r\n  message: string;\r\n  descriptions?: string;\r\n};\r\nexport function openNotificationWithIcon(type: NotificationType, config: Config) {\r\n  notification[type]({\r\n    message: config.message ? config.message : '-',\r\n    description: config.descriptions ? config.descriptions : '',\r\n  });\r\n}\r\n/* \r\nexport function debounce(func: Function, wait: number, immediate?: boolean) {\r\n  var timeout: any;\r\n\r\n  return function executedFunction(this: any) {\r\n    var context = this;\r\n    var args = arguments;\r\n\r\n    var later = function () {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    };\r\n\r\n    var callNow = immediate && !timeout;\r\n\r\n    clearTimeout(timeout);\r\n\r\n    timeout = setTimeout(later, wait);\r\n\r\n    if (callNow) func.apply(context, args);\r\n  };\r\n} */\r\n\r\nexport function percentageOf(num: number, total: number): number {\r\n  return (num / total) * 100;\r\n}\r\n\r\n/* export function Round(num: number) {\r\n  return Math.round((num + Number.EPSILON) * 100) / 100;\r\n} */\r\n\r\nexport function round(number: number, precision: number = 0): number {\r\n  const factor: number = Math.pow(10, precision);\r\n  return Math.round(number * factor) / factor;\r\n}\r\n\r\ntype DebouncedFunction<T extends (...args: any[]) => any> = ((...args: Parameters<T>) => void) & { cancel: () => void };\r\n\r\nexport function _debounce<T extends (...args: any[]) => any>(func: T, wait: number, options?: { leading?: boolean; trailing?: boolean }): DebouncedFunction<T> {\r\n  let timeoutId: ReturnType<typeof setTimeout> | null;\r\n\r\n  const debouncedFunc = function (this: any, ...args: Parameters<T>) {\r\n    const context = this;\r\n    const callFunc = function () {\r\n      func.apply(context, args);\r\n    };\r\n    if (options?.leading && !timeoutId) {\r\n      callFunc();\r\n    }\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    timeoutId = setTimeout(() => {\r\n      if (!options?.leading) {\r\n        callFunc();\r\n      }\r\n      timeoutId = null;\r\n    }, wait);\r\n  };\r\n\r\n  debouncedFunc.cancel = function () {\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = null;\r\n    }\r\n  };\r\n\r\n  return debouncedFunc as DebouncedFunction<T>;\r\n}\r\n\r\nexport const formatFileSize = (size: number, toFixed: number = 2): string => {\r\n  if (size < 1024) {\r\n    return size + ' bytes';\r\n  } else if (size < 1024 * 1024) {\r\n    return (size / 1024).toFixed(toFixed) + ' KB';\r\n  } else {\r\n    return (size / (1024 * 1024)).toFixed(toFixed) + ' MB';\r\n  }\r\n};\r\n\r\nexport const ShowFeedbackInps = () => {\r\n  try {\r\n    window._Feedback.configure();\r\n    window._Feedback.show();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const CountFormatter = ({ count, maxLength }: any) => {\r\n  return `${count}/${maxLength} caratteri`;\r\n};\r\n\r\nexport const IsCausaleEventoMeteo = (idTipoCausale: string | number) => `${idTipoCausale}` === `1` || `${idTipoCausale}` === `2` || `${idTipoCausale}` === `170`;\r\n\r\nexport const getCurrentReducer = (TipoPrestazione: string | number) => {\r\n  const FlowDomandaCIGO: any = useSelector((state: any) => state.FlowDomandaCIGO.FlowDomanda);\r\n  const FlowDomandaFONDI: any = useSelector((state: any) => state.FlowDomandaFONDI.FlowDomanda);\r\n  const FlowDomandaISU: any = useSelector((state: any) => state.FlowDomandaISU.FlowDomanda);\r\n  switch (TipoPrestazione) {\r\n    case 1 /* CIGO */:\r\n      return FlowDomandaCIGO;\r\n    case 2 /* FONDI */:\r\n      return FlowDomandaFONDI;\r\n    case 3 /* FIS */:\r\n      return FlowDomandaFONDI;\r\n    case 4 /* ISU */:\r\n      return FlowDomandaISU;\r\n  }\r\n};\r\n\r\n/* controlla che l'utente abbiamo un id 66 e la carica del rappresentante legale */\r\nexport const IsRappLegale = (RappLegale: boolean): boolean => {\r\n  const { user } = store.getState().Session;\r\n  /*   const { ModuloDomanda } = store.getState();\r\n  const { RappLegale } = getCurrentReducer(ModuloDomanda.TipoPrestazione);\r\n  const { RappLegale } = getCurrentReducer(ModuloDomanda.TipoPrestazione); */\r\n\r\n  return `${user.tipoUtente}` === '66' && RappLegale === true;\r\n};\r\n\r\n// Function to check for date range overlap\r\nexport const doArraysOverlap = (array1: [string, string], array2: [string, string], format = LF) => {\r\n  const startDate1 = dayjs(array1[0], format);\r\n  const endDate1 = dayjs(array1[1], format);\r\n  const startDate2 = dayjs(array2[0], format);\r\n  const endDate2 = dayjs(array2[1], format);\r\n\r\n  // Check for overlap\r\n  return startDate1.isBefore(endDate2) || (startDate1.isSame(endDate2) && endDate1.isAfter(startDate2)) || endDate1.isSame(startDate2);\r\n};\r\n\r\nexport const debounce = (callback: any, wait: number = 750) => {\r\n  let timeoutId: any = null;\r\n  return (...args: any) => {\r\n    window.clearTimeout(timeoutId);\r\n    timeoutId = window.setTimeout(() => {\r\n      callback.apply(null, args);\r\n    }, wait);\r\n  };\r\n};\r\n\r\nexport const rimuoviDuplicati = (array1: any, array2: any, parametroConfronto: string) => {\r\n  // Unisce i due array senza duplicati utilizzando un set e un parametro di confronto dinamico\r\n  const arrayUnici = array1.concat(array2.filter((item2: any) => !array1.some((item1: any) => item1[parametroConfronto] === item2[parametroConfronto])));\r\n  return arrayUnici;\r\n};\r\n\r\nexport const scrollToPartialId = (partialId: string = 'InfoSection-') => {\r\n  const element = document.querySelector(`[id*=\"${partialId}\"]`);\r\n  if (element) {\r\n    element.scrollIntoView({ block: 'center', behavior: 'smooth' });\r\n  }\r\n};\r\n","/** @format */\r\n\r\nimport { Typography } from 'antd';\r\nimport styled, { css } from 'styled-components';\r\n\r\nexport const PageWrapper = styled.div<{ $background?: boolean }>`\r\n  ${({ $background }) => {\r\n    if ($background)\r\n      return css`\r\n        margin-top: 24px;\r\n        background: white;\r\n        border-radius: 4px;\r\n        padding: 24px;\r\n        box-shadow: 0 1px 2px -2px rgba(0, 0, 0, 0.16), 0 3px 6px 0 rgba(0, 0, 0, 0.12), 0 5px 12px 4px rgba(0, 0, 0, 0.09) !important;\r\n      `;\r\n  }}\r\n  min-height: 280px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport const PageTitle = styled(Typography.Title)`\r\n  /* padding: 0px !important; */\r\n  /* margin: 0px !important; */\r\n  margin-bottom: 0px !important;\r\n`;\r\n","/** @format */\r\nimport axios, { type AxiosRequestConfig } from 'axios';\r\nimport { useCallback, useState } from 'react';\r\nimport { get_preFix } from '../../assets/extra/extra';\r\nimport { ApiResponse } from './Beneficiari.types';\r\n\r\nexport const call_Beneficiari = async (urlExtension: string = '', urlPrefix = get_preFix()) => {\r\n  const config: AxiosRequestConfig = {\r\n    method: 'get',\r\n    url: `${process.env.REACT_APP_API_HOSTNAME}${urlPrefix}${process.env.REACT_APP_PRATICA_BENEFICIARI}${urlExtension}`,\r\n    maxBodyLength: Infinity,\r\n    headers: {},\r\n  };\r\n  const response = await axios(config);\r\n  const responseData = response.data;\r\n\r\n  // add transformers here if needed\r\n  const transformedData: ApiResponse = responseData ? responseData : null;\r\n\r\n  return transformedData;\r\n};\r\n\r\nconst useBeneficiari = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<any>(null);\r\n  const [data, setData] = useState<ApiResponse | null>(null);\r\n\r\n  const execute = async (urlExtension: string = '') => {\r\n    try {\r\n      setIsLoading(true);\r\n      const responseData = await call_Beneficiari(urlExtension);\r\n      setData(responseData);\r\n      setIsLoading(false);\r\n      return responseData;\r\n    } catch (e: any) {\r\n      setError(e);\r\n      setIsLoading(false);\r\n      throw e;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setIsLoading(false);\r\n    setData(null);\r\n    setError(null);\r\n  };\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    data,\r\n    execute: useCallback(execute, []), // to avoid infinite calls when inside a `useEffect`\r\n    reset: useCallback(reset, []), // to avoid infinite calls when inside a `useEffect`\r\n  };\r\n};\r\n\r\nexport default useBeneficiari;\r\n","/** @format */\r\nimport axios, { type AxiosRequestConfig } from 'axios';\r\nimport { useCallback, useState } from 'react';\r\nimport { get_preFix } from '../../assets/extra/extra';\r\nimport { ApiResponse } from './PraticaOrdinaria.types';\r\n\r\nexport const call_PraticaOrdinaria = async (urlExtension: string = '', urlPrefix = get_preFix()) => {\r\n  const config: AxiosRequestConfig = {\r\n    method: 'get',\r\n    url: `${process.env.REACT_APP_API_HOSTNAME}${urlPrefix}${process.env.REACT_APP_PRATICA_ORDINARIA}${urlExtension}`,\r\n    headers: {},\r\n  };\r\n  const response = await axios(config);\r\n  const responseData = response.data;\r\n\r\n  // add transformers here if needed\r\n  const transformedData: ApiResponse = responseData ? responseData : null;\r\n\r\n  return transformedData;\r\n};\r\n\r\nconst usePraticaOrdinaria = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<any>(null);\r\n  const [data, setData] = useState<ApiResponse | null>(null);\r\n\r\n  const execute = async (urlExtension: string = '') => {\r\n    try {\r\n      setIsLoading(true);\r\n      const responseData = await call_PraticaOrdinaria(urlExtension);\r\n      setData(responseData);\r\n      setIsLoading(false);\r\n      return responseData;\r\n    } catch (e: any) {\r\n      setError(e);\r\n      setIsLoading(false);\r\n      throw e;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setIsLoading(false);\r\n    setData(null);\r\n    setError(null);\r\n  };\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    data,\r\n    execute: useCallback(execute, []), // to avoid infinite calls when inside a `useEffect`\r\n    reset: useCallback(reset, []), // to avoid infinite calls when inside a `useEffect`\r\n  };\r\n};\r\n\r\nexport default usePraticaOrdinaria;\r\n","/** @format */\r\nimport axios, { type AxiosRequestConfig } from 'axios';\r\nimport { useCallback, useState } from 'react';\r\nimport { get_preFix } from '../../assets/extra/extra';\r\nimport type { ApiResponse } from './PraticaStraordinaria.types';\r\n\r\nexport const call_PraticaStraordinaria = async (urlExtension: string = '', urlPrefix = get_preFix()) => {\r\n  const config: AxiosRequestConfig = {\r\n    method: 'get',\r\n    url: `${process.env.REACT_APP_API_HOSTNAME}${urlPrefix}${process.env.REACT_APP_PRATICA_STRAORDINARIA}${urlExtension}`,\r\n    headers: {},\r\n  };\r\n  const response = await axios(config);\r\n  const responseData = response.data;\r\n\r\n  // add transformers here if needed\r\n  const transformedData: ApiResponse = responseData ? responseData : null;\r\n\r\n  return transformedData;\r\n};\r\n\r\nconst usePraticaStraordinaria = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<any>(null);\r\n  const [data, setData] = useState<ApiResponse | null>(null);\r\n\r\n  const execute = async (urlExtension: string = '') => {\r\n    try {\r\n      setIsLoading(true);\r\n      const responseData = await call_PraticaStraordinaria(urlExtension);\r\n      setData(responseData);\r\n      setIsLoading(false);\r\n      return responseData;\r\n    } catch (e: any) {\r\n      setError(e);\r\n      setIsLoading(false);\r\n      throw e;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setIsLoading(false);\r\n    setData(null);\r\n    setError(null);\r\n  };\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    data,\r\n    execute: useCallback(execute, []), // to avoid infinite calls when inside a `useEffect`\r\n    reset: useCallback(reset, []), // to avoid infinite calls when inside a `useEffect`\r\n  };\r\n};\r\n\r\nexport default usePraticaStraordinaria;\r\n","/** @format */\r\n\r\nimport { PercentageOutlined } from '@ant-design/icons';\r\nimport { Chart } from '@antv/g2';\r\nimport { Card, Col, Row, Spin, Statistic } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport CountUp from 'react-countup';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { PageTitle, PageWrapper } from '../../assets/styles/global.styles';\r\nimport { setSideBarId } from '../../redux/reducers/Session.reducer';\r\nimport { useBeneficiari } from '../../services/Beneficiari';\r\nimport { usePraticaOrdinaria } from '../../services/PraticaOrdinaria';\r\nimport { usePraticaStraordinaria } from '../../services/PraticaStraordinaria';\r\nimport { Props } from './Home.types';\r\n\r\nconst ChartContainer = styled.div`\r\n  width: 100%;\r\n  height: 550px;\r\n`;\r\n\r\nconst DashboardCard = styled(Card)<{ $minHeight?: string }>`\r\n  box-shadow: 0 1px 2px -2px rgba(0, 0, 0, 0.16), 0 3px 6px 0 rgba(0, 0, 0, 0.12), 0 5px 12px 4px rgba(0, 0, 0, 0.09) !important;\r\n`;\r\n\r\nconst Home = ({ SideBarId }: Props) => {\r\n  const dispatch = useDispatch();\r\n  const LF = process.env.REACT_APP_LF;\r\n  const LF_API = process.env.REACT_APP_LF_API;\r\n  const ND_SIGN = process.env.REACT_APP_ND_SIGN;\r\n\r\n  const B: any = useBeneficiari();\r\n  const PO: any = usePraticaOrdinaria();\r\n  const PS: any = usePraticaStraordinaria();\r\n\r\n  const [percentages, setPercentages] = useState({\r\n    PO_percentage: 0,\r\n    PS_percentage: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(setSideBarId(SideBarId));\r\n    getBeneficiari();\r\n    getPraticheOrdinarie();\r\n    getPraticheStraordinarie();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (PO.data && PS.data && B.data) {\r\n      const PO_percentage = calculatePercentage(PO.data.data.length, PO.data.data.length + PS.data.data.length);\r\n      const PS_percentage = calculatePercentage(PS.data.data.length, PO.data.data.length + PS.data.data.length);\r\n      setPercentages({ PO_percentage, PS_percentage });\r\n      RenderBarChartTotals();\r\n    }\r\n  }, [PO.data, PS.data, B.data]);\r\n\r\n  const getPraticheStraordinarie = async () => {\r\n    await PS.execute();\r\n  };\r\n\r\n  const getPraticheOrdinarie = async () => {\r\n    await PO.execute();\r\n  };\r\n\r\n  const getBeneficiari = async () => {\r\n    await B.execute();\r\n  };\r\n\r\n  const RenderBarChartTotals = () => {\r\n    const chart = new Chart({\r\n      container: 'RenderBarChartTotals',\r\n      autoFit: true,\r\n    });\r\n\r\n    chart\r\n      .interval()\r\n      .data([\r\n        { Tipologia: 'Pratiche ordinarie', 'Totale:': PO.data.data.length, washaway: 0.21014492753623193 },\r\n        { Tipologia: 'Pratiche straordinarie', 'Totale:': PS.data.data.length, washaway: 0.5596330275229358 },\r\n        { Tipologia: 'Beneficiari', 'Totale:': B.data.data.length, washaway: 0 },\r\n      ])\r\n      .encode('x', 'Tipologia')\r\n      .encode('y', 'Totale:')\r\n      .encode('color', 'Tipologia')\r\n      .encode('size', 40)\r\n      .legend('color', {\r\n        /** Keep the legend centered horizontally and vertically*/\r\n        layout: {\r\n          justifyContent: 'flex-end',\r\n          alignItems: 'flex-end',\r\n          flexDirection: 'column',\r\n        },\r\n        itemMarker: 'circle',\r\n        itemLabelFontSize: 16,\r\n      })\r\n      .style('radiusTopLeft', 10)\r\n      .style('radiusTopRight', 10)\r\n      .style('radiusBottomRight', 10)\r\n      .style('radiusBottomLeft', 10);\r\n\r\n    chart.render();\r\n  };\r\n\r\n  const formatter: any = (value: number) => <CountUp end={value} separator=',' />;\r\n\r\n  const calculatePercentage = (number: number, totalItems: number): number => {\r\n    let percentage: number = (number / totalItems) * 100;\r\n    return percentage;\r\n  };\r\n\r\n  const isSomethingLoading = B.isLoading || PS.isLoading || PO.isLoading;\r\n\r\n  return (\r\n    <PageWrapper $background={false}>\r\n      <Row gutter={[24, 24]}>\r\n        <Col span={24}>\r\n          <PageTitle level={3}>Analytics</PageTitle>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={16} lg={16} xl={16}>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Spin spinning={isSomethingLoading} tip={'Caricamento...'}>\r\n                <DashboardCard bordered={false} hoverable>\r\n                  <Statistic\r\n                    title='Pratiche ordinarie'\r\n                    value={percentages.PO_percentage}\r\n                    precision={2}\r\n                    valueStyle={{ color: '#3f8600' }}\r\n                    prefix={<PercentageOutlined />} /* suffix='%' */\r\n                  />\r\n                </DashboardCard>\r\n              </Spin>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Spin spinning={isSomethingLoading} tip={'Caricamento...'}>\r\n                <DashboardCard bordered={false} hoverable>\r\n                  <Statistic\r\n                    title='Pratiche straordinarie'\r\n                    value={percentages.PS_percentage}\r\n                    precision={2}\r\n                    valueStyle={{ color: '#cf1322' }}\r\n                    prefix={<PercentageOutlined />}\r\n                    /* suffix='%' */\r\n                  />\r\n                </DashboardCard>\r\n              </Spin>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={8} lg={8} xl={8}>\r\n          <Spin spinning={isSomethingLoading} tip={'Caricamento...'}>\r\n            <DashboardCard bordered={false} hoverable>\r\n              {/* <ChartContainer id='NumeroBeneficiari' /> */}\r\n              <Statistic title='Numero dei beneficiari' value={B.data ? B.data.data.length : 0} formatter={formatter} />\r\n            </DashboardCard>\r\n          </Spin>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Spin spinning={isSomethingLoading} tip={'Caricamento...'}>\r\n            <DashboardCard bordered={false} hoverable>\r\n              <ChartContainer id='RenderBarChartTotals' />\r\n            </DashboardCard>\r\n          </Spin>\r\n        </Col>\r\n      </Row>\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["get_preFix","prefix","GetPath","error","PageWrapper","styled","div","_templateObject","_taggedTemplateLiteral","_ref","$background","css","_templateObject2","PageTitle","Typography","Title","_templateObject3","useBeneficiari","isLoading","setIsLoading","useState","setError","data","setData","execute","useCallback","async","urlExtension","arguments","length","undefined","responseData","urlPrefix","config","method","url","concat","process","maxBodyLength","Infinity","headers","axios","call_Beneficiari","e","reset","usePraticaOrdinaria","call_PraticaOrdinaria","usePraticaStraordinaria","call_PraticaStraordinaria","ChartContainer","DashboardCard","Card","SideBarId","dispatch","useDispatch","B","PO","PS","percentages","setPercentages","PO_percentage","PS_percentage","useEffect","setSideBarId","getBeneficiari","getPraticheOrdinarie","getPraticheStraordinarie","calculatePercentage","RenderBarChartTotals","chart","Chart","container","autoFit","interval","Tipologia","washaway","encode","legend","layout","justifyContent","alignItems","flexDirection","itemMarker","itemLabelFontSize","style","render","number","totalItems","isSomethingLoading","_jsx","children","_jsxs","Row","gutter","Col","span","level","xs","sm","md","lg","xl","Spin","spinning","tip","bordered","hoverable","Statistic","title","value","precision","valueStyle","color","PercentageOutlined","formatter","CountUp","end","separator","id"],"sourceRoot":""}